Index: app/src/main/java/ru/aakumykov/me/sociocat/interfaces/iBaseView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.aakumykov.me.sociocat.interfaces;\n\nimport android.app.Activity;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.content.SharedPreferences;\nimport android.view.Menu;\n\nimport androidx.annotation.Nullable;\n\npublic interface iBaseView {\n\n    // Контекст\n    Context getAppContext();\n    Activity getActivity();\n\n    // Сообщения вверху страницы\n    void showProgressMessage(int messageId);\n    void showProgressMessage(int messageId, String insertedText);\n    void hideProgressMessage();\n\n    void showProgressBar();\n    void hideProgressBar();\n\n    <T> void showDebugMsg(T msg);\n\n    void showInfoMsg(int messageId, String... formatArguments);\n\n    void showErrorMsg(int userMessageId, String consoleMessage);\n\n    void hideMsg();\n\n    void showToast(int msgId);\n    void showToast(String message);\n\n    // Заголовок страницы\n    void setPageTitle(int titleId);\n    void setPageTitle(int titleId, String insertedText);\n\n    // Настройка страницы\n    void activateUpButton();\n\n    // Хранимые настройки\n    SharedPreferences getSharedPrefs(String prefsName);\n    void clearSharedPrefs(SharedPreferences sharedPreferences, String dataName);\n\n    // Разное\n    <T> void requestLogin(int requestCode, @Nullable T transitArguments);\n\n    // Разное (УБРАТЬ!)\n    void proceedLoginRequest(Intent intent);\n    void goCreateCard();\n\n    void closePage();\n    void closePage(int resultCode, String action);\n\n    String getString(int stringResourceId);\n\n    String getString(int stringResourceId, String substitutedMessage);\n\n    void startSomeActivity(Intent intent);\n\n    Long getLastLoginTime();\n    void updateLastLoginTime();\n\n    void refreshMenu();\n    void hideMenuItem(Menu menu, int menuItemId);\n\n    void showUserProfile(String userId);\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/ru/aakumykov/me/sociocat/interfaces/iBaseView.java	(date 1577595923000)
+++ app/src/main/java/ru/aakumykov/me/sociocat/interfaces/iBaseView.java	(date 1577595745000)
@@ -45,6 +45,7 @@
     void clearSharedPrefs(SharedPreferences sharedPreferences, String dataName);
 
     // Разное
+    void requestLogin();
     <T> void requestLogin(int requestCode, @Nullable T transitArguments);
 
     // Разное (УБРАТЬ!)
Index: app/src/main/java/ru/aakumykov/me/sociocat/BaseView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.aakumykov.me.sociocat;\n\nimport android.app.Activity;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.content.SharedPreferences;\nimport android.content.res.Resources;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.Menu;\nimport android.view.MenuInflater;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.widget.TextView;\n\nimport androidx.annotation.Nullable;\nimport androidx.appcompat.app.ActionBar;\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport org.greenrobot.eventbus.EventBus;\nimport org.greenrobot.eventbus.Subscribe;\n\nimport java.util.Date;\n\nimport ru.aakumykov.me.sociocat.card_edit.CardEdit_View;\nimport ru.aakumykov.me.sociocat.card_type_chooser.CardTypeChooser;\nimport ru.aakumykov.me.sociocat.cards_grid.CardsGrid_View;\nimport ru.aakumykov.me.sociocat.event_objects.UserAuthorizedEvent;\nimport ru.aakumykov.me.sociocat.event_objects.UserUnauthorizedEvent;\nimport ru.aakumykov.me.sociocat.interfaces.iBaseView;\nimport ru.aakumykov.me.sociocat.interfaces.iMyDialogs;\nimport ru.aakumykov.me.sociocat.login.Login_View;\nimport ru.aakumykov.me.sociocat.preferences.PreferencesActivity;\nimport ru.aakumykov.me.sociocat.singletons.AuthSingleton;\nimport ru.aakumykov.me.sociocat.tags_list2.TagsList2_View;\nimport ru.aakumykov.me.sociocat.user_show.UserShow2_View;\nimport ru.aakumykov.me.sociocat.users.show.UserShow_View;\nimport ru.aakumykov.me.sociocat.utils.MyDialogs;\nimport ru.aakumykov.me.sociocat.utils.MyUtils;\n\npublic abstract class BaseView extends AppCompatActivity implements iBaseView\n{\n    private final static String TAG = \"BaseView\";\n\n    // Абстрактные методы\n    public abstract void onUserLogin();\n    public abstract void onUserLogout();\n\n    // EventBus\n    @Subscribe\n    public void onUserAuthorized(UserAuthorizedEvent event) {\n        invalidateOptionsMenu();\n        onUserLogin();\n    }\n    @Subscribe\n    public void onUserUnauthorized(UserUnauthorizedEvent event) {\n        invalidateOptionsMenu();\n        onUserLogout();\n    }\n\n\n    // Системные методы\n    @Override\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        saveLastLoginTime();\n    }\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\n        //Log.d(TAG, \"onActivityResult()\");\n\n        switch (requestCode) {\n\n            case Constants.CODE_LOGIN:\n                //invalidateOptionsMenu();\n                break;\n\n            case Constants.CODE_EDIT_CARD:\n                onCardEdited(resultCode, data);\n                break;\n\n            default:\n                super.onActivityResult(requestCode, resultCode, data);\n        }\n    }\n\n    @Override\n    protected void onStart() {\n        super.onStart();\n        EventBus.getDefault().register(this);\n    }\n\n    @Override\n    protected void onResume() {\n        super.onResume();\n        invalidateOptionsMenu();\n        //checkUnfinishedEdit();\n    }\n\n    @Override\n    protected void onStop() {\n        super.onStop();\n        EventBus.getDefault().unregister(this);\n    }\n\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n\n        MenuInflater menuInflater = getMenuInflater();\n\n//        menuInflater.inflate(R.menu.tags, menu);\n\n        if (AuthSingleton.isLoggedIn()) {\n//            menuInflater.inflate(R.menu.preferences, menu);\n            menuInflater.inflate(R.menu.profile_in, menu);\n            menuInflater.inflate(R.menu.logout, menu);\n        }\n        else {\n            menuInflater.inflate(R.menu.profile_out, menu);\n            menuInflater.inflate(R.menu.login, menu);\n        }\n\n        return super.onCreateOptionsMenu(menu);\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n\n        switch (item.getItemId()) {\n\n            case android.R.id.home:\n                this.finish();\n                break;\n\n            case R.id.actionPreferences:\n                openPreferences();\n                break;\n\n            case R.id.actionProfile:\n                onUserProfileClicked();\n                break;\n\n            case R.id.actionLogin:\n                login();\n                break;\n\n            case R.id.actionLogout:\n                logout();\n                break;\n\n            case R.id.actionCreate:\n                goCreateCard();\n                break;\n\n            case R.id.actionCards:\n                goCardsGrid();\n                break;\n\n            case R.id.actionTags:\n                goTagsList();\n                break;\n\n            default:\n                super.onOptionsItemSelected(item);\n        }\n\n        return true;\n    }\n\n\n    // Контекст\n    @Override\n    public Context getAppContext() {\n        return getApplicationContext();\n    }\n\n    @Override\n    public Activity getActivity() {\n        return (Activity) this;\n    }\n\n\n    // Сообщения вверху страницы\n    @Override\n    public void showProgressMessage(int messageId) {\n        String msg = getResources().getString(messageId);\n        showProgressMessage(msg);\n    }\n\n    @Override\n    public void showProgressMessage(int messageId, String insertedText) {\n        String msg = getResources().getString(messageId, insertedText);\n        showProgressMessage(msg);\n    }\n\n    @Override\n    public void hideProgressMessage() {\n        hideProgressBar();\n        hideMsg();\n    }\n\n    @Override\n    public void showProgressBar() {\n        View progressBar = findViewById(R.id.progressBar);\n        if (null != progressBar)\n            MyUtils.show(progressBar);\n    }\n\n    @Override\n    public void hideProgressBar() {\n        View progressBar = findViewById(R.id.progressBar);\n        if (null != progressBar)\n            MyUtils.hide(progressBar);\n    }\n\n    @Override\n    public <T> void showDebugMsg(T msg) {\n        if (Config.DEBUG_MODE) {\n            hideProgressMessage();\n            String text = \"\";\n            if (msg instanceof Integer) {\n                text = getResources().getString((Integer) msg);\n                showMsg(text, R.color.debug, R.color.white);\n            }\n            else {\n                text = String.valueOf(msg);\n                showMsg(text, R.color.debug, R.color.white);\n            }\n            Log.d(\"showDebugMsg(): \", text);\n        }\n    }\n\n    @Override\n    public void showInfoMsg(int messageId, String... formatArguments) {\n        String text = getResources().getString(messageId, formatArguments);\n        hideProgressMessage();\n        showMsg(text, R.color.info, R.color.info_background);\n    }\n\n    @Override\n    public void showErrorMsg(int messageId, @Nullable String consoleMessage) {\n        String msg = getResources().getString(messageId);\n        if (Config.DEBUG_MODE)\n            msg = msg + \": \" + consoleMessage;\n        hideProgressMessage();\n        showMsg(msg, R.color.error, R.color.error_background);\n        Log.e(TAG, consoleMessage);\n    }\n\n    @Override\n    public void hideMsg() {\n        TextView messageView = findViewById(R.id.messageView);\n        TextView stackTraceView = findViewById(R.id.stackTraceView);\n\n        if (null != messageView) {\n            MyUtils.hide(messageView);\n        }\n\n        if (null != stackTraceView) {\n            MyUtils.hide(stackTraceView);\n        }\n    }\n\n    @Override\n    public void showToast(int msgId) {\n        MyUtils.showCustomToast(getAppContext(), msgId);\n    }\n\n    @Override\n    public void showToast(String message) {\n        MyUtils.showCustomToast(getAppContext(), message);\n    }\n\n\n    // Разное\n    @Override\n    public <T> void requestLogin(int requestCode, @Nullable T transitData) {\n\n        Intent intent = new Intent(this, Login_View.class);\n\n        if (null != transitData) {\n            if (transitData instanceof Intent) {\n                intent.putExtra(Intent.EXTRA_INTENT, (Intent) transitData);\n            } else if (transitData instanceof Bundle) {\n                intent.putExtra(Constants.TRANSIT_ARGUMENTS, (Bundle) transitData);\n            } else {\n                throw new RuntimeException(\"transitData argument must be Intent or Bundle type.\");\n            }\n        }\n\n        startActivityForResult(intent, requestCode);\n    }\n\n    @Override\n    public void proceedLoginRequest(Intent intent) {\n        Intent originalIntent = (Intent) intent.getParcelableExtra(Intent.EXTRA_INTENT);\n        startActivity(originalIntent);\n    }\n\n    @Override\n    public void startSomeActivity(Intent intent) {\n        startActivity(intent);\n    }\n\n    @Override\n    public SharedPreferences getSharedPrefs(String prefsName) {\n        return getSharedPreferences(prefsName, Context.MODE_PRIVATE);\n    }\n\n    @Override\n    public void clearSharedPrefs(SharedPreferences sharedPreferences, String dataName) {\n        SharedPreferences.Editor editor = sharedPreferences.edit();\n        editor.remove(dataName);\n        editor.apply();\n    }\n\n    @Override\n    public void goCreateCard() {\n        Intent intent = new Intent(this, CardTypeChooser.class);\n        startActivityForResult(intent, Constants.CODE_CREATE_CARD);\n    }\n\n    @Override\n    public void closePage() {\n        finish();\n    }\n\n    @Override\n    public void closePage(int resultCode, String action) {\n        Intent intent = new Intent();\n        intent.setAction(action);\n        setResult(resultCode, intent);\n        finish();\n    }\n\n    @Override\n    public String getString(int stringResourceId, String substitutedMessage) {\n        return getResources().getString(stringResourceId, substitutedMessage);\n    }\n\n    @Override\n    public void setPageTitle(int titleId) {\n        String title = getResources().getString(titleId);\n        setPageTitle(title);\n    }\n\n    @Override\n    public void setPageTitle(int titleId, String insertedText) {\n        String title = getResources().getString(titleId, insertedText);\n        setPageTitle(title);\n    }\n\n    @Override\n    public void activateUpButton() {\n        ActionBar actionBar = getSupportActionBar();\n        if (null != actionBar) actionBar.setDisplayHomeAsUpEnabled(true);\n    }\n\n    @Override\n    public Long getLastLoginTime() {\n        long currentTime = new Date().getTime();\n\n        if (!AuthSingleton.isLoggedIn()) {\n            return currentTime;\n        }\n        else {\n            SharedPreferences sharedPreferences = getSharedPrefs(Constants.SHARED_PREFERENCES_LOGIN);\n            return sharedPreferences.getLong(Constants.KEY_LAST_LOGIN, currentTime);\n        }\n    }\n\n    @Override\n    public void updateLastLoginTime() {\n        saveLastLoginTime();\n    }\n\n    @Override\n    public void refreshMenu() {\n        invalidateOptionsMenu();\n    }\n\n    @Override\n    public void hideMenuItem(Menu menu, int menuItemId) {\n        MenuItem menuItem = menu.findItem(R.id.actionNewCards);\n        if (null != menuItem)\n            menuItem.setVisible(false);\n    }\n\n    @Override\n    public void showUserProfile(String userId) {\n        Intent intent = new Intent(this, UserShow_View.class);\n        intent.putExtra(Constants.USER_ID, userId);\n        startActivity(intent);\n    }\n\n\n    // Внутренние методы\n    private void showProgressMessage(String msg) {\n        Resources resources = getResources();\n        showMsg(\n                msg,\n                R.color.info,\n                R.color.info_background\n        );\n        showProgressBar();\n    }\n\n    private void showMsg(String text, int textColorId, @Nullable Integer backgroundColorId) {\n        TextView messageView = findViewById(R.id.messageView);\n\n        int fgColor = getResources().getColor(textColorId);\n        int bgColor = getResources().getColor(null != backgroundColorId ? backgroundColorId : R.color.background_default);\n\n        if (null != messageView) {\n            messageView.setText(text);\n            messageView.setTextColor(fgColor);\n            messageView.setBackgroundColor(bgColor);\n            MyUtils.show(messageView);\n        } else {\n            Log.w(TAG, \"messageView not found\");\n        }\n    }\n\n    private void setPageTitle(String title) {\n        ActionBar actionBar = getSupportActionBar();\n        if (null != actionBar) {\n            actionBar.setTitle(title);\n        }\n    }\n\n    private void login() {\n        // Можно и без result, потому что статус авторизации обрабатывается в\n        // AuthStateListener\n        if (!AuthSingleton.isLoggedIn()) {\n            //Log.d(TAG, \"doLogin()\");\n            Intent intent = new Intent(this, Login_View.class);\n            startActivityForResult(intent, Constants.CODE_LOGIN);\n        }\n    }\n\n    private void logout() {\n        AuthSingleton.logout();\n    }\n\n    private void openPreferences() {\n        Intent intent = new Intent(this, PreferencesActivity.class);\n        startActivity(intent);\n    }\n\n    private void onUserProfileClicked() {\n        Intent intent = new Intent(this, UserShow2_View.class);\n        intent.putExtra(Constants.USER_ID, AuthSingleton.currentUserId());\n        startActivity(intent);\n    }\n\n    private void onCardEdited(int resultCode, @Nullable Intent data) {\n//        MyUtils.showCustomToast(getAppContext(), R.string.not_implemented_yet);\n//        switch (resultCode) {\n//            case RESULT_OK:\n//                showToast(R.string.INFO_card_saved);\n//                break;\n//            case RESULT_CANCELED:\n//                showToast(R.string.INFO_operation_cancelled);\n//                break;\n//            default:\n//                showErrorMsg(R.string.ERROR_saving_card);\n//                Log.e(TAG, \"data: \"+data);\n//                break;\n//        }\n    }\n\n    private void goCardsGrid() {\n        Intent intent = new Intent(this, CardsGrid_View.class);\n        startActivity(intent);\n    }\n\n    private void goTagsList() {\n        Intent intent = new Intent(this, TagsList2_View.class);\n        startActivity(intent);\n    }\n\n    private void checkUnfinishedEdit() {\n        final SharedPreferences sharedPreferences = getSharedPrefs(Constants.SHARED_PREFERENCES_CARD_EDIT);\n\n        String className = getClass().getSimpleName();\n\n        if (!getClass().getSimpleName().equals(\"CardEdit_View\")) {\n\n            if (sharedPreferences.contains(Constants.CARD)) {\n\n                MyDialogs.resumeCardEditDialog(this, new iMyDialogs.StandardCallbacks() {\n                    @Override\n                    public void onCancelInDialog() {\n                        checkUnfinishedEdit();\n                    }\n\n                    @Override\n                    public void onNoInDialog() {\n                        clearSharedPrefs(sharedPreferences, Constants.CARD);\n                    }\n\n                    @Override\n                    public boolean onCheckInDialog() {\n                        return true;\n                    }\n\n                    @Override\n                    public void onYesInDialog() {\n                        Intent intent = new Intent(BaseView.this, CardEdit_View.class);\n                        intent.setAction(Constants.ACTION_EDIT_RESUME);\n                        startActivity(intent);\n                    }\n                });\n            }\n        }\n    }\n\n    private void saveLastLoginTime() {\n        SharedPreferences sharedPreferences = getSharedPrefs(Constants.SHARED_PREFERENCES_LOGIN);\n        SharedPreferences.Editor editor = sharedPreferences.edit();\n        editor.putLong(Constants.KEY_LAST_LOGIN, new Date().getTime());\n        editor.apply();\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/ru/aakumykov/me/sociocat/BaseView.java	(date 1577595923000)
+++ app/src/main/java/ru/aakumykov/me/sociocat/BaseView.java	(date 1577595845000)
@@ -315,6 +315,11 @@
         editor.apply();
     }
 
+    @Override
+    public void requestLogin() {
+
+    }
+
     @Override
     public void goCreateCard() {
         Intent intent = new Intent(this, CardTypeChooser.class);
Index: app/src/main/java/ru/aakumykov/me/sociocat/user_show/UserShow_Presenter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.aakumykov.me.sociocat.user_show;\n\nimport android.content.Intent;\nimport android.text.TextUtils;\n\nimport androidx.annotation.Nullable;\n\nimport ru.aakumykov.me.sociocat.Constants;\nimport ru.aakumykov.me.sociocat.R;\nimport ru.aakumykov.me.sociocat.models.User;\nimport ru.aakumykov.me.sociocat.singletons.AuthSingleton;\nimport ru.aakumykov.me.sociocat.singletons.UsersSingleton;\nimport ru.aakumykov.me.sociocat.singletons.iUsersSingleton;\nimport ru.aakumykov.me.sociocat.user_show.stubs.UserShow_ViewStub;\n\n\nclass UserShow_Presenter implements iUserShow.iPresenter {\n\n    private final static String TAG = \"UserShow_Presenter\";\n    private iUserShow.iView view;\n    private User displayedUser;\n    private iUsersSingleton usersSingleton = UsersSingleton.getInstance();\n\n\n    @Override\n    public void linkView(iUserShow.iView view) {\n        this.view = view;\n    }\n\n    @Override\n    public void unlinkView() {\n        this.view = new UserShow_ViewStub();\n    }\n\n    @Override\n    public boolean hasUser() {\n        return null != displayedUser;\n    }\n\n    @Override\n    public void onFirstOpen(@Nullable Intent intent) {\n        checkAuthorization();\n\n        if (null == intent) {\n            view.showErrorMsg(R.string.USER_SHOW_error_displaying_user, \"Intent is null\");\n            return;\n        }\n\n        String userId = intent.getStringExtra(Constants.USER_ID);\n        if (TextUtils.isEmpty(userId)) {\n            view.showErrorMsg(R.string.USER_SHOW_error_displaying_user, \"There is no userId in Intent\");\n            return;\n        }\n\n        loadAndShowUser(userId);\n    }\n\n    @Override\n    public void onConfigChanged() {\n        checkAuthorization();\n        view.displayUser(displayedUser);\n    }\n\n    @Override\n    public void onRefreshRequested() {\n        checkAuthorization();\n        loadAndShowUser(displayedUser.getKey());\n    }\n\n    @Override\n    public void onUserLoggedOut() {\n        checkAuthorization();\n    }\n\n    @Override\n    public boolean canEditUser() {\n        String currentUserId = AuthSingleton.currentUserId();\n\n        if (null == currentUserId)\n            return false;\n\n        if (null == displayedUser)\n            return false;\n\n        return usersSingleton.currentUserIsAdmin() || currentUserId.equals(displayedUser.getKey());\n    }\n\n    // Внутренние методы\n    private void checkAuthorization() {\n        if (!AuthSingleton.isLoggedIn()) {\n            view.showToast(R.string.not_authorized);\n            view.closePage();\n        }\n    }\n\n    private void loadAndShowUser(String userId) {\n        view.showProgressBar();\n\n        usersSingleton.getUserById(userId, new iUsersSingleton.ReadCallbacks() {\n            @Override\n            public void onUserReadSuccess(User user) {\n                displayedUser = user;\n                view.hideProgressBar();\n                view.hideRefreshThrobber();\n                view.displayUser(displayedUser);\n                view.refreshMenu();\n            }\n\n            @Override\n            public void onUserReadFail(String errorMsg) {\n                view.showErrorMsg(R.string.USER_SHOW_error_displaying_user, errorMsg);\n            }\n        });\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/ru/aakumykov/me/sociocat/user_show/UserShow_Presenter.java	(date 1577595923000)
+++ app/src/main/java/ru/aakumykov/me/sociocat/user_show/UserShow_Presenter.java	(date 1577595745000)
@@ -88,8 +88,9 @@
     // Внутренние методы
     private void checkAuthorization() {
         if (!AuthSingleton.isLoggedIn()) {
-            view.showToast(R.string.not_authorized);
-            view.closePage();
+//            view.showToast(R.string.not_authorized);
+//            view.closePage();
+            view.requestLogin();
         }
     }
 
Index: app/src/main/java/ru/aakumykov/me/sociocat/BaseView_Stub.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.aakumykov.me.sociocat;\n\nimport android.app.Activity;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.content.SharedPreferences;\nimport android.view.Menu;\n\nimport androidx.annotation.Nullable;\n\nimport ru.aakumykov.me.sociocat.interfaces.iBaseView;\n\npublic class BaseView_Stub implements iBaseView {\n\n    @Override\n    public Context getAppContext() {\n        return null;\n    }\n\n    @Override\n    public Activity getActivity() {\n        return null;\n    }\n\n    @Override\n    public void showProgressMessage(int messageId) {\n\n    }\n\n    @Override\n    public void showProgressMessage(int messageId, String insertedText) {\n\n    }\n\n    @Override\n    public void hideProgressMessage() {\n\n    }\n\n    @Override\n    public void showProgressBar() {\n\n    }\n\n    @Override\n    public void hideProgressBar() {\n\n    }\n\n    @Override\n    public <T> void showDebugMsg(T msg) {\n\n    }\n\n    @Override\n    public void showInfoMsg(int messageId, String... formatArguments) {\n\n    }\n\n    @Override\n    public void showErrorMsg(int userMessageId, String consoleMessage) {\n\n    }\n\n    @Override\n    public void hideMsg() {\n\n    }\n\n    @Override\n    public void showToast(int msgId) {\n\n    }\n\n    @Override\n    public void showToast(String message) {\n\n    }\n\n    @Override\n    public void setPageTitle(int titleId) {\n\n    }\n\n    @Override\n    public void setPageTitle(int titleId, String insertedText) {\n\n    }\n\n    @Override\n    public void activateUpButton() {\n\n    }\n\n    @Override\n    public SharedPreferences getSharedPrefs(String prefsName) {\n        return null;\n    }\n\n    @Override\n    public void clearSharedPrefs(SharedPreferences sharedPreferences, String dataName) {\n\n    }\n\n    @Override\n    public <T> void requestLogin(int requestCode, @Nullable T transitArguments) {\n\n    }\n\n    @Override\n    public void proceedLoginRequest(Intent intent) {\n\n    }\n\n    @Override\n    public void goCreateCard() {\n\n    }\n\n    @Override\n    public void closePage() {\n\n    }\n\n    @Override\n    public void closePage(int resultCode, String action) {\n\n    }\n\n    @Override\n    public String getString(int stringResourceId) {\n        return null;\n    }\n\n    @Override\n    public String getString(int stringResourceId, String substitutedMessage) {\n        return null;\n    }\n\n    @Override\n    public void startSomeActivity(Intent intent) {\n\n    }\n\n    @Override\n    public Long getLastLoginTime() {\n        return null;\n    }\n\n    @Override\n    public void updateLastLoginTime() {\n\n    }\n\n    @Override\n    public void refreshMenu() {\n\n    }\n\n    @Override\n    public void hideMenuItem(Menu menu, int menuItemId) {\n\n    }\n\n    @Override\n    public void showUserProfile(String userId) {\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/ru/aakumykov/me/sociocat/BaseView_Stub.java	(date 1577595923000)
+++ app/src/main/java/ru/aakumykov/me/sociocat/BaseView_Stub.java	(date 1577595745000)
@@ -102,6 +102,11 @@
 
     }
 
+    @Override
+    public void requestLogin() {
+
+    }
+
     @Override
     public <T> void requestLogin(int requestCode, @Nullable T transitArguments) {
 
